Created a method isPresent to check if the item from one LinkedList is present in the final LinkedList.
This is used in case of both Union and Intersection cases.

Complexity:
 union and intersection is calling isPresent function which has a worst-case complexity of O(n) and for n elements
 the overall complexity is O(n^2), where n is the number of elements in larger linkedlist.

 Space Complexity for Union is O(n) where n is the number of elements in larger linkedlist,
  if there are lot of common elements between both linkedlist
  If both the linkedlists are equal or same
  if linkedlists are completely different
  Overall : O(n)

  Space Complexity for Intersection is O(n) where n is the number of elements in larger linkedlist
   if there are lot of common elements between both linkedlist
   if both the linkedlists are equal or same
   O(1) if both the linkedlist are completely different
   Overall : O(n)